short_comment = @{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
long_comment = @{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
COMMENT = { short_comment | long_comment }

alpha = { 'a'..'z' | 'A'..'Z' }
alpha_ = { alpha | "_" }
digit = { '0'..'9' }

identifier = @{ alpha_ ~ (alpha_ | digit)* }
type_name = @{ identifier }
namespace_name = @{ identifier }

accessibility_decorator = @{ "public" | "protected" | "private" | "internal" }
const_decorator = @{ "const" | "readonly" }
member_decorator = @{ "static" | "abstract" | "virtual" | "sealed" }

type_reference = { (namespace_name ~ ".")* ~ type_name ~ ("<" ~ type_reference ~ ("," ~ type_reference)* ~ ">")? }

semicolon = @{ ";" }
expression = @{ (!(semicolon | region_end) ~ ANY)* }

var_declaration = { type_reference ~ identifier ~ ("=" ~ expression)? }
field_declaration = { accessibility_decorator? ~ const_decorator? ~ member_decorator? ~ var_declaration ~ semicolon }

options = @{ alpha* }

region_name = @{ (!NEWLINE ~ ANY)* }
region = { region_name ~ content }
request_marker = @{"func#"}
gen_request = { request_marker ~ identifier ~ options? ~ field_declaration* ~ gen_response? }
generated_marker = @{"#generated"}
gen_response = { region_start ~ generated_marker ~ fill* ~ region_end } 

fill = @{(!region_end ~ ANY)}

region_start = @{ "#region" }
region_end = @{ "#endregion" }

content = { ((region_start ~ (gen_request | region) ~ region_end) | fill)* }

file = _{ SOI ~ content ~ EOI }

WHITESPACE = { " " | "\t" | NEWLINE}