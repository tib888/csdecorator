//doc_comment = @{ "///" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
short_comment = @{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
long_comment = @{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
COMMENT = { short_comment | long_comment }

alpha = { 'a'..'z' | 'A'..'Z' }
alpha_ = { alpha | "_" }
digit = { '0'..'9' }

identifier = @{ alpha_ ~ (alpha_ | digit)* }
type_name = @{ identifier }
namespace_name = @{ identifier }

accessibility_decorator = @{ "public" | "protected" | "private" | "internal" }
const_decorator = @{ "const" | "readonly" }
member_decorator = @{ "static" | "abstract" | "virtual" | "sealed" }

type_reference = { (namespace_name ~ ".")* ~ type_name ~ ("<" ~ type_reference ~ ("," ~ type_reference)* ~ ">")? }

semicolon = @{ ";" }
expression = @{ (!(semicolon | "#endregion") ~ ANY)* }

var_declaration = { type_reference ~ identifier ~ ("=" ~ expression)? }
field_declaration = { accessibility_decorator? ~ const_decorator? ~ member_decorator? ~ var_declaration ~ semicolon }

//curly_open = @{ "{" }
//curly_close = @{ "}" }
//constructor = { identifier ~ "(" var_declararion? ~ ("," ~ var_declararion)* ~ ")" ~ "{" ~ body ~ "}" }

region_name = @{ (!NEWLINE ~ ANY)* }
region = { region_name ~ content }
gen_request = { "func#" ~ identifier ~ field_declaration* ~ gen_response? }
gen_response = { "#generated" ~ content } 

content = { (("#region" ~ (gen_response | gen_request | region) ~ "#endregion") | (!"#endregion" ~ ANY))* }

file = _{ SOI ~ content ~ EOI }

WHITESPACE = _{ " " | "\t" | NEWLINE}